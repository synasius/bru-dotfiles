# vim: set filetype=zsh:

modulename=${0}

_yarn() {
    info "installing global yarn"
    nvm use default
    if (( $+commands[yarn] )); then
        info "yarn already installed"
        return
    fi

    npm install -g yarn
}

_nvm() {
    if [[ -d "${NVM_DIR}" ]]; then
        info "nvm already installed. trying to upgrade"
        (
          cd "$NVM_DIR"
          git fetch --tags origin
          git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
        ) && \. "$NVM_DIR/nvm.sh" --no-use
    else
        info "installing nvm"
        # Install nvm
        (
          git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
          cd "$NVM_DIR"
          git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
        ) && \. "${NVM_DIR}/nvm.sh" --no-use
    fi

    info "installing lts/dubnium"
    nvm install lts/dubnium
    info "create alias default"
    nvm alias default lts/dubnium
}

_nvm_packages() {
    info "installing some usefull global packges"
    nvm use default
    # all these packages are needed by neovim
    if ( yarn global list | grep javascript-typescript-langserver &> /dev/null ); then
        info 'skipping - global packages installed'
        return
    fi

    yarn -s global add javascript-typescript-langserver neovim phantomjs-prebuilt
}

node-setup() {
    # Deactivate pipefail because nvm_* functions behave in a bad
    # way when pipefail is active. -_-
    set +o pipefail
    _nvm
    _yarn

    _nvm_packages
    # Once done we reactivate it
    set -o pipefail
}

node-setup "$@"
